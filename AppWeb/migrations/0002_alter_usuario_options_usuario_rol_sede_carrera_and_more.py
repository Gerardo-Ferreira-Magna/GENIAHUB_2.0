# Generated by Django 5.2.7 on 2025-10-28 14:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('AppWeb', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='usuario',
            options={'ordering': ['-date_joined'], 'verbose_name': 'Usuario', 'verbose_name_plural': 'Usuarios'},
        ),
        migrations.AddField(
            model_name='usuario',
            name='rol',
            field=models.CharField(choices=[('EST', 'Estudiante'), ('DOC', 'Docente'), ('EMP', 'Empresa'), ('ADM', 'Administrador')], default='EST', max_length=3),
        ),
        migrations.CreateModel(
            name='Sede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('ciudad', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_creados', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_actualizados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sede',
                'verbose_name_plural': 'Sedes',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('nombre', models.CharField(max_length=120)),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('nivel', models.CharField(choices=[('T', 'Técnico'), ('P', 'Profesional')], default='P', max_length=20)),
                ('activa', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_creados', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_actualizados', to=settings.AUTH_USER_MODEL)),
                ('sede', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carreras', to='AppWeb.sede')),
            ],
            options={
                'verbose_name': 'Carrera',
                'verbose_name_plural': 'Carreras',
                'ordering': ['sede__codigo', 'nombre'],
                'unique_together': {('nombre', 'sede')},
            },
        ),
        migrations.CreateModel(
            name='SolicitudEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('titulo', models.CharField(db_index=True, max_length=255)),
                ('descripcion', models.TextField(help_text='Detalle completo del desafío o necesidad de la empresa')),
                ('sector', models.CharField(db_index=True, help_text='Ej: Logística, Energía, Retail, Salud, etc.', max_length=100)),
                ('fecha_limite', models.DateField(blank=True, null=True)),
                ('palabras_clave', models.CharField(blank=True, help_text='Ej: IA, logística, inventario, energía solar', max_length=255, null=True)),
                ('archivo_adjunto', models.FileField(blank=True, help_text='PDF, Excel, imágenes, etc.', null=True, upload_to='solicitudes_empresas/')),
                ('estado', models.CharField(choices=[('REC', 'Recibida (pendiente de revisión)'), ('REV', 'En revisión por docente / comité'), ('APR', 'Aprobada internamente'), ('ASI', 'Asignada a estudiante(s)'), ('REJ', 'Rechazada'), ('FIN', 'Finalizada / cerrada')], db_index=True, default='REC', max_length=3)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_creados', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(limit_choices_to={'rol': 'EMP'}, on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_enviadas', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_actualizados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitud de empresa',
                'verbose_name_plural': 'Solicitudes de empresa',
                'ordering': ['-updated_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AsignacionProyecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('ACE', 'Aceptado por docente'), ('PRO', 'En progreso (con estudiantes activos)'), ('FIN', 'Finalizado por docente'), ('CAN', 'Cancelado / Rechazado')], db_index=True, default='ACE', max_length=3)),
                ('comentarios_docente', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_creados', to=settings.AUTH_USER_MODEL)),
                ('docente_responsable', models.ForeignKey(limit_choices_to={'rol': 'DOC'}, on_delete=django.db.models.deletion.CASCADE, related_name='proyectos_asignados_como_docente', to=settings.AUTH_USER_MODEL)),
                ('estudiantes', models.ManyToManyField(blank=True, limit_choices_to={'rol': 'EST'}, related_name='proyectos_asignados_como_estudiante', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_actualizados', to=settings.AUTH_USER_MODEL)),
                ('solicitud', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='asignacion', to='AppWeb.solicitudempresa')),
            ],
            options={
                'verbose_name': 'Asignación de proyecto',
                'verbose_name_plural': 'Asignaciones de proyectos',
                'ordering': ['-updated_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Proyecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('titulo', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('resumen', models.TextField(help_text='Resumen ejecutivo', max_length=500)),
                ('descripcion', models.TextField()),
                ('tipo', models.CharField(choices=[('EST', 'Estudiantil'), ('DOC', 'Docente'), ('EMP', 'Empresarial')], db_index=True, max_length=3)),
                ('estado', models.CharField(choices=[('BOR', 'Borrador'), ('REV', 'En revisión'), ('APR', 'Aprobado'), ('ACT', 'En ejecución / Activo'), ('DET', 'Detenido / En pausa'), ('FIN', 'Finalizado'), ('PUB', 'Publicado'), ('ARC', 'Archivado')], db_index=True, default='BOR', max_length=3)),
                ('anio', models.PositiveIntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('palabras_clave', models.CharField(blank=True, max_length=255, null=True)),
                ('documento_pdf', models.FileField(blank=True, null=True, upload_to='proyectos/')),
                ('es_publico', models.BooleanField(db_index=True, default=False)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proyectos_creados', to=settings.AUTH_USER_MODEL)),
                ('carrera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proyectos', to='AppWeb.carrera')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_creados', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_actualizados', to=settings.AUTH_USER_MODEL)),
                ('sede', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proyectos', to='AppWeb.sede')),
            ],
            options={
                'verbose_name': 'Proyecto',
                'verbose_name_plural': 'Proyectos',
                'ordering': ['-updated_at', '-created_at'],
                'indexes': [models.Index(fields=['estado', 'es_publico', 'anio'], name='AppWeb_proy_estado_547330_idx'), models.Index(fields=['tipo', 'anio'], name='AppWeb_proy_tipo_f6c991_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='solicitudempresa',
            index=models.Index(fields=['estado', 'sector'], name='AppWeb_soli_estado_0528f3_idx'),
        ),
        migrations.AddIndex(
            model_name='asignacionproyecto',
            index=models.Index(fields=['estado'], name='AppWeb_asig_estado_0accd8_idx'),
        ),
    ]
